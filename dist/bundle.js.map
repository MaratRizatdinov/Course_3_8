{"version":3,"file":"bundle.js","mappings":"mBAsCO,SAASA,EACZC,EACAC,GAEA,IAEIC,EAAkB,GAClBC,EAAQ,GACRC,EAAY,QAEZC,EACAC,OAAOC,aAAaC,QAAQ,sBAC5BC,EAAiBC,KAAKC,MAAMN,GAC5BO,EACAN,OAAOC,aAAaC,QAAQ,sBAC5BK,EAAqBH,KAAKC,MAAMC,GAEhCE,EAAgB,wqCAuDpB,GAtCyB,IAArBL,EAAUM,SAAcZ,EAAQ,QACX,KAArBM,EAAUM,SAAeZ,EAAQ,UACZ,KAArBM,EAAUM,SAAeZ,EAAQ,QAIrCD,EAAkB,UAAGY,EAAa,iGAG5BE,EAtCkB,GAwChBH,EACAI,EACAb,GACH,gBAGLJ,EAAekB,UAAYhB,EAK3BiB,YAAW,WACPf,EAAY,OACZF,EAAkB,UAAGY,EAAa,iGAGhCE,EAxDkB,GA0DhBH,EACAI,EACAb,GACH,gBAGDJ,EAAekB,UAAYhB,CAC/B,GAhB4C,GAkBzB,aAAfD,EAA2B,OAAOD,EAItCmB,YAAW,WACPjB,EAAkB,UAAGY,EAAa,8EAEWX,EAAK,uBAChDa,EA5Ec,GA4EkBP,EAAWQ,EAAab,GAAU,gBAGpEJ,EAAekB,UAAYhB,CAC/B,GAAG,GAIHiB,YAAW,WACPf,EAAY,QACZ,IAAIgB,GAAqB,IAAIC,MAAOC,UAEpChB,OAAOC,aAAagB,QAAQ,QAASC,OAAOJ,IAE5ClB,EAAkB,UAAGY,EAAa,8EAEWX,EAAK,uBAChDa,EA7Fc,GA6FkBP,EAAWQ,EAAab,GAAU,gBAGpEJ,EAAekB,UAAYhB,CAC/B,GAAG,IACP,CAEO,SAASuB,EAAezB,EAA6BC,EAAmByB,GAC3E3B,EAAgBC,EAAgBC,GAChCkB,YAAW,WACP,IA+FAQ,EAEAP,EAEAQ,EAEAC,EACAC,EAEAC,EAxGIC,EAAiBC,SAASC,cAAc,OAC5CF,EAAeG,UAAY,0CAC3BH,EAAed,UAAY,yCACR,QAAfQ,EACM,+BACA,gCAA+B,0EAGD,QAAfA,EACM,oBACA,gBAAe,qJAqF9CC,GAAc,IAAIN,MAAOC,UAEzBF,EAAqBgB,OAAO9B,OAAOC,aAAaC,QAAQ,UAIxDqB,GAFAD,EAAaS,KAAKC,OAAOX,EAAcP,GAAc,MAEzB,GAAKQ,EAAa,GAAKA,EACnDE,EAAcO,KAAKC,MAAMV,EAAa,IAEtCG,EACAF,EAAe,EAAIL,OAAOK,GAAgB,IAAML,OAAOK,IAEvDC,EAAc,EAAIN,OAAOM,GAAe,IAAMN,OAAOM,IAE3B,IAAMC,GAhGwB,0GAExD,IAAIQ,EAAkBN,SAASO,cAAc,cAC7CD,EAAWE,MAAMC,QAAU,MAC3BH,EAAaA,EAAWI,MAAMX,GACNC,SAASO,cAAc,mBAClCC,MAAMC,QAAU,KACjC,GAAG,EACP,CAMA,SAAS1B,EAAiB4B,EAAgBC,EAAW5B,EAAoDb,GACrG,IAAgB,UAAAyC,EAAA,eAAK,CAAhB,IAAIC,EAAG,KACRF,GAEI,gDAAyCxC,EAAS,mDACvB0C,EAAI,GAAE,oDACJA,EAAI,GAAE,0CAEnB7B,EAAY6B,EAAK1C,GAAU,wB,CAInD,OAAOwC,CACX,CAGA,SAAS3B,EAAY6B,EAAY1C,GAC7B,MAAkB,SAAdA,EACO,oEACsB,MAAX0C,EAAI,GAAa,KAAOA,EAAI,GAAE,iIAGrBC,EAAUD,EAAI,IAAG,iIAGjBC,EACPD,EAAI,IACP,iKAGUC,EAAUD,EAAI,IAAG,uHAGf,MAAXA,EAAI,GAAa,KAAOA,EAAI,GAAE,gCAGlC,UAAd1C,EACO,yHADX,CAKJ,CAIO,SAAS2C,EAAUC,GAEtB,MAAc,MAAVA,EACU,gCAGA,MAAVA,EACU,mCAGA,MAAVA,EACU,+BAGA,MAAVA,EACU,mCADd,CAIJ,CCrMA,SAASC,EAAQC,QAAA,IAAAA,IAAAA,EAAA,IACbA,EAAMC,MAAK,WAAM,OAAAd,KAAKe,SAAW,EAAhB,GACrB,CC/BA,IACIC,EACApD,EAFAD,EAAqCiC,SAASO,cAAc,eAMhE,SAASc,IACkB,OAAnBtD,GFdD,SAAyBA,GAC5BM,OAAOC,aAAagD,WAAW,SAC/BjD,OAAOC,aAAagD,WAAW,sBAC/BjD,OAAOC,aAAagD,WAAW,sBAW/BvD,EAAekB,UATS,kmBAWxB,IAAIsC,EAAsBvB,SAASwB,iBAAiB,wBAChDC,EAAmBzB,SAASO,cAAc,wBAC9CkB,EAAYC,UAAW,EAEvB,I,eAASb,GACLA,EAAIc,iBAAiB,SAAS,WAC1B,IAAgB,UAAAJ,EAAA,eAAJ,KACJK,UAAUC,OAAO,+BAEzBhB,EAAIe,UAAUE,IAAI,+BAClBzD,OAAOC,aAAagB,QAAQ,QAASuB,EAAIkB,aACzC1D,OAAOC,aAAagB,QAAQ,aAAc,YAC1CmC,EAAYC,UAAW,EACvBD,EAAYG,UAAUC,OAAO,2BACjC,G,EAVY,MAAAN,EAAA,e,EAAJ,KAYhB,CElBiCS,CAAgBjE,GAE7C,IAAI0D,EAAmBzB,SAASO,cAAc,wBAE9CkB,EAAYE,iBAAiB,SAAS,YACL,IAAzBF,EAAYC,UAKhBN,EAAc/C,OAAOC,aAAaC,QAAQ,UAAY,GACtDP,EAAaK,OAAOC,aAAaC,QAAQ,cDxB1C,SAAqC6C,QAAA,IAAAA,IAAAA,EAAA,IAMxC,IALA,IACIhD,EADEO,EAA+B,GAGjCsD,EAAwB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjD,MAHM,CAAC,IAAK,IAAK,IAAK,KAGtB,eAChB,IADC,IAAMlB,EAAK,KACU,MAAAkB,EAAA,eAAa,CAA9B,IAAMC,EAAO,KACdvD,EAAmBwD,KAAKD,EAAUnB,E,CAG1C1C,OAAOC,aAAagB,QAChB,qBACAb,KAAK2D,UAAUzD,IAGnBqC,EAAQrC,GAEgB,MAAhByC,IAAqBzC,EAAmBG,OAAS,GACjC,MAAhBsC,IAAqBzC,EAAmBG,OAAS,GACjC,MAAhBsC,IAAqBzC,EAAmBG,OAAS,GAKzDkC,EAFA5C,EAAqBO,EAAmB0D,OAAO1D,IAI/CN,OAAOC,aAAagB,QAChB,qBACAb,KAAK2D,UAAUhE,GAEvB,CCLQkE,CAA2BlB,GAEJ,OAAnBrD,GAA0C,OAAfC,GAC3BF,EAAeC,EAAgBC,GAEnCkB,YAAW,WAAM,OAIzB,WACI,IAAIqD,EAAqBvC,SAASO,cAAc,mBAEhDgC,EAAcX,UAAUC,OAAO,4BAE/BU,EAAcZ,iBAAiB,SAAS,WACpCN,GACJ,IAKA,IAHA,IAAImB,EAAoBxC,SAASwB,iBAAiB,gBAE9CiB,EAAoB,G,WACf5B,GACLA,EAAIc,iBAAiB,SAAS,WAC1B,IAAIe,EAAoB7B,EAAI8B,QAAQ5B,MAAQF,EAAI8B,QAAQT,QACpDrB,EAAIe,UAAUgB,SAAS,uBACvBH,EAAaN,KAAKO,GACtB7B,EAAIe,UAAUC,OAAO,sBACrBhB,EAAIe,UAAUE,IAAI,qBAElBjB,EAAI5B,UAmEhB,SAA4B4B,GACxB,MAAO,oEAEyC,MAAxBA,EAAI8B,QAAQT,QACN,KACArB,EAAI8B,QAAQT,QAAO,iIAIlBpB,EAAUD,EAAI8B,QAAQ5B,OAAM,iIAG5BD,EACPD,EAAI8B,QAAQ5B,OACf,iKAGUD,EAAUD,EAAI8B,QAAQ5B,OAAM,uHAIX,MAAxBF,EAAI8B,QAAQT,QACN,KACArB,EAAI8B,QAAQT,QAAO,+BAGrD,CA7F4BW,CAAmBhC,GAEnC3B,YAAW,WACP,IAAIO,EAAa,GACbgD,EAAa3D,OAAS,GAAK2D,EAAa3D,OAAS,GAAM,GAEnD2D,EAAaA,EAAa3D,OAAS,KACnC2D,EAAaA,EAAa3D,OAAS,KAEnCT,OAAOC,aAAagB,QAAQ,aAAc,WAC1CtB,EAAaK,OAAOC,aAAaC,QAAQ,cACzCkB,EAAa,OACU,OAAnB1B,GAA0C,OAAfC,GAC3BwB,EACIzB,EACAC,EACAyB,GAIRP,YAAW,WAEHc,SAASO,cAAc,qBACZoB,iBAAiB,SAAS,WACrCtD,OAAOC,aAAagD,WAAW,SAC/BjD,OAAOC,aAAagD,WAAW,cAC/B,IAAIwB,EACA9C,SAASO,cAAc,mBACvBwC,EACA/C,SAASO,cAAc,cAC3BuC,EAAajB,SACbkB,EAAUvC,MAAMC,QAAU,IAC1BY,GACJ,GACJ,GAAG,IAGPoB,EAAa3D,SAAW0D,EAAa1D,SACrCT,OAAOC,aAAagB,QAAQ,aAAc,WAC1CtB,EAAaK,OAAOC,aAAaC,QAAQ,cACzCkB,EAAa,MACU,OAAnB1B,GAA0C,OAAfC,GAC3BwB,EAAczB,EAAgBC,EAAYyB,GAE9CP,YAAW,WAEHc,SAASO,cAAc,qBAEtBA,cAAc,qBACdoB,iBAAiB,SAAS,WACvBtD,OAAOC,aAAagD,WAAW,SAC/BjD,OAAOC,aAAagD,WAAW,cAC/B,IAAIwB,EACA9C,SAASO,cAAc,mBACvBwC,EACA/C,SAASO,cAAc,mBAC3BuC,EAAajB,SACbkB,EAAUvC,MAAMC,QAAU,IAC1BY,GACJ,GACR,GAAG,GAEX,GAAG,EACP,G,EAvEY,MAAAmB,EAAA,e,EAAJ,KAyEhB,CAzFyBQ,EAAA,GAAY,OAZzBC,MAAM,sBAad,GACJ,CAvBA5B,E","sources":["webpack://course_3/./src/js/render.ts","webpack://course_3/./src/js/tools.ts","webpack://course_3/./src/js/index.ts"],"sourcesContent":["//----Стартовая страница----\n\nexport function renderStartPage(contentElement: HTMLElement) {\n    window.localStorage.removeItem(\"level\");\n    window.localStorage.removeItem(\"gameCardCollection\");\n    window.localStorage.removeItem(\"fullCardCollection\");\n\n    let selectPageContent = `<div class=\"select__container global__container\">\n                            <div class=\"select__title\">Выбери сложность</div>\n                            <div class=\"select__levelsbox\">\n                                <div class =\"select__levelbutton\">1</div>\n                                <div class=\"select__levelbutton\">2</div>\n                                <div class=\"select__levelbutton\">3</div>\n                            </div>     \n                            <div class=\"select__startbutton  global__button global__button--disabled\">Старт</div>       \n                        </div>`;\n    contentElement.innerHTML = selectPageContent;\n\n    let buttonElements: any = document.querySelectorAll(\".select__levelbutton\");\n    let startButton: any = document.querySelector(\".select__startbutton\");\n    startButton.disabled = true;\n\n    for (let key of buttonElements) {\n        key.addEventListener(\"click\", () => {\n            for (let key of buttonElements) {\n                key.classList.remove(\"select__levelbutton--active\");\n            }\n            key.classList.add(\"select__levelbutton--active\");\n            window.localStorage.setItem(\"level\", key.textContent);\n            window.localStorage.setItem(\"gameStatus\", \"gameTime\");\n            startButton.disabled = false;\n            startButton.classList.remove(\"global__button--disabled\");\n        });\n    }\n}\n\n//----Страница-загрузка игры----\n\nexport function renderGamePage(\n    contentElement: HTMLElement,\n    gameStatus: string\n) {\n    let gamePageItems = ``;\n    let fullGamePageItems = ``;\n    let gamePageContent = \"\";\n    let level = \"\";\n    let cardShirt = \"close\";\n    //console.log(gameStatus);\n    let gameCardCollection: any =\n        window.localStorage.getItem(\"gameCardCollection\");\n    let gameCards: any = JSON.parse(gameCardCollection);\n    let fullCardCollection: any =\n        window.localStorage.getItem(\"fullCardCollection\");\n    let fullGameCards: any = JSON.parse(fullCardCollection);\n\n    let headerElement = `<div class=\"header__container\">\n                            <div class=\"header__timerfield\">\n                                <div class=\"header__timertitle\">\n                                    <div class=\"header__timernamemin\">min</div>\n                                    <div class=\"header__timernamesec\">sec</div>\n                                </div>\n                                <div class=\"header__timerclock\">\n                                    <div class=\"header__timercounter header__timercounter--decimin\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--min\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--point\">.</div>\n                                    <div class=\"header__timercounter header__timercounter--decisec\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--sec\">0</div>\n                                </div>\n                            </div>\n                            <div class=\"header__button global__button global__button--disabled\">Начать заново</div>\n                          </div>`;\n\n    if (gameCards.length === 6) level = \"easy\";\n    if (gameCards.length === 12) level = \"medium\";\n    if (gameCards.length === 18) level = \"hard\";\n\n    // Первоначально показывем полную колоду (закрытую )\n\n    gamePageContent = `${headerElement}\n        \n    <div class = \"card__container card__container--full center\">\n        ${getRenderElement(\n            fullGamePageItems,\n            fullGameCards,\n            cardPicture,\n            cardShirt\n        )}\n    </div>`;\n\n    contentElement.innerHTML = gamePageContent;\n\n    // По истечении указанного времени показываем полную колоду(открытую)\n    let pauseTime = gameStatus === \"gameTime\" ? 0 : 0;\n\n    setTimeout(() => {\n        cardShirt = \"open\";\n        gamePageContent = `${headerElement}\n        \n    <div class = \"card__container card__container--full center\">\n        ${getRenderElement(\n            fullGamePageItems,\n            fullGameCards,\n            cardPicture,\n            cardShirt\n        )}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, pauseTime);\n\n    if (gameStatus !== \"gameTime\") return contentElement;\n\n    // По истечении указанного времени показываем игровую колоду(открытую)\n\n    setTimeout(() => {\n        gamePageContent = `${headerElement}\n            \n    <div class = \"card__container card__container--${level}\">\n        ${getRenderElement(gamePageItems, gameCards, cardPicture, cardShirt)}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, 0);\n\n    // По истечении указанного времени показываем игровую колоду(закрытую)\n\n    setTimeout(() => {\n        cardShirt = \"close\";\n        let startTimer: number = new Date().getTime();\n        //console.log(startTimer);\n        window.localStorage.setItem(\"start\", String(startTimer));\n\n        gamePageContent = `${headerElement}\n            \n    <div class = \"card__container card__container--${level}\">\n        ${getRenderElement(gamePageItems, gameCards, cardPicture, cardShirt)}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, 5000);\n}\n\nexport function renderEndPage( contentElement: HTMLElement, gameStatus:string, gameResult:string ) {\n    renderGamePage( contentElement, gameStatus );\n    setTimeout(() => {\n        let endPageContent = document.createElement(\"div\");\n        endPageContent.className = \"end__container global__container center\";\n        endPageContent.innerHTML = `<div class=\"end__img\"><img src=${\n            gameResult === \"win\"\n                ? '\"img/WinImage.svg\" alt=\"Win\"'\n                : '\"img/LossImage.svg\" alt=\"Win\"'\n        }></div>\n                             <div class=\"end__title\"> ${\n                                 gameResult === \"win\"\n                                     ? \"&nbspВы выиграли!\"\n                                     : \"Вы проиграли!\"\n                             }</div>\n                             <div class=\"end__text\">Затраченное время</div>\n                             <div class=\"end__time\">${showTime()}</div>\n                             <div class=\"end__startbutton  global__button \">Играть снова</div>`;\n        let newContent: any = document.querySelector(\".container\");\n        newContent.style.opacity = \"0.3\";\n        newContent = newContent.after(endPageContent);\n        let endContainer: any = document.querySelector(\".end__container\");\n        endContainer.style.opacity = \"1.0\";\n    }, 0);\n}\n\n// ----Ниже находятся вспомогательные функции----\n\n//Функция генерирует контент игровых карт\n\nfunction getRenderElement(element:string, Arr:any[], cardPicture :(a:string,b:string)=>string|undefined, cardShirt:string) {\n    for (let key of Arr) {\n        element =\n            element +\n            `<div class ='card__items card__items--${cardShirt}'\n                          data-suite=${key[1]}\n                          data-dignity=${key[0]}>\n\n                          ${cardPicture(key, cardShirt)}\n             </div>`;\n    }\n\n    return element;\n}\n// Функция генерирует игральную карту\n\nfunction cardPicture(key:string, cardShirt:string): string|undefined {\n    if (cardShirt === \"open\") {\n        return `<div class =\"card__firstSymbol\">\n                        ${key[0] === \"1\" ? \"10\" : key[0]}\n                    </div>\n                    <div class =\"card__secondSymbol\">\n                        <img src=${suitePict(key[1])}>\n                    </div>\n                    <div class =\"card__thirdSymbol\">\n                        <img src=${suitePict(\n                            key[1]\n                        )} class = 'card__centerPicture'>\n                    </div>\n                    <div class =\"card__fourSymbol \">\n                        <img src=${suitePict(key[1])}>\n                    </div>\n                    <div class =\"card__fiveSymbol\">\n                        ${key[0] === \"1\" ? \"10\" : key[0]}\n                    </div>`;\n    }\n    if (cardShirt === \"close\") {\n        return `<div class =\"card__shirt\">\n                    <img src=\"img/рубашка.svg\" alt=\"Рубашка\">\n                </div>`;\n    }\n}\n\n// Функция подставляет рисунок  масти\n\nexport function suitePict(suite:string):string|undefined {\n    let picture = \"\";\n    if (suite === \"s\") {\n        picture = '\"./img/Spades.svg\" alt=\"Пики\"';\n        return picture;\n    }\n    if (suite === \"d\") {\n        picture = '\"img/Diamonds.svg\" alt=\"<Бубны>\"';\n        return picture;\n    }\n    if (suite === \"h\") {\n        picture = '\"img/Hearts.svg\" alt=\"Червы\"';\n        return picture;\n    }\n    if (suite === \"c\") {\n        picture = '\"img/Clubs.svg\" alt=\"Трефы\"';\n        return picture;\n    }\n}\n\n// Функция - таймер\n\nfunction showTime() :string {\n    let finishTimer = new Date().getTime();\n\n    let startTimer: number = Number(window.localStorage.getItem(\"start\"));\n\n    let timeToGame = Math.floor((finishTimer - startTimer) / 1000);\n\n    let secondNumber = timeToGame > 59 ? timeToGame % 60 : timeToGame;\n    let firstNumber = Math.floor(timeToGame / 60);\n\n    let secondSymbol =\n        secondNumber > 9 ? String(secondNumber) : \"0\" + String(secondNumber);\n    let firstSymbol =\n        firstNumber > 9 ? String(firstNumber) : \"0\" + String(firstNumber);\n\n    let fullTimer = firstSymbol + \".\" + secondSymbol;\n    return fullTimer;\n}\n","// Функция получает перетасованную колоду из 36 карт.\n//Создает случайный массив карт в зависимости от уровня и помещает в localStorage\n\nexport function createRandomCardCollection( levelOfGame:string ='' ) {\n    const fullCardCollection: string[] = [];\n    let gameCardCollection: string[] = [];\n    let cardSuite: string[] = [\"s\", \"h\", \"d\", \"c\"];\n    let cardDignity: string[] = [\"A\", \"K\", \"Q\", \"J\", \"1\", \"9\", \"8\", \"7\", \"6\"];\n\n    for (const suite of cardSuite) {\n        for (const dignity of cardDignity) {\n            fullCardCollection.push(dignity + suite);\n        }\n    }\n    window.localStorage.setItem(\n        \"fullCardCollection\",\n        JSON.stringify(fullCardCollection)\n    );\n\n    shuffle(fullCardCollection);\n    \n        if (levelOfGame === \"1\") fullCardCollection.length = 3;\n        if (levelOfGame === \"2\") fullCardCollection.length = 6;\n        if (levelOfGame === \"3\") fullCardCollection.length = 9;\n    \n\n    gameCardCollection = fullCardCollection.concat(fullCardCollection);\n\n    shuffle(gameCardCollection);\n\n    window.localStorage.setItem(\n        \"gameCardCollection\",\n        JSON.stringify(gameCardCollection)\n    );\n}\n\n// Функция-рандомизатор\n\nfunction shuffle(array: string[] = []) {\n    array.sort(() => Math.random() - 0.5);\n}\n","import \"../style/style.css\";\nimport {\n    renderStartPage,\n    renderGamePage,\n    suitePict,\n    renderEndPage,\n} from \"./render\";\nimport { createRandomCardCollection } from \"./tools\";\n\nlet contentElement: HTMLElement | null = document.querySelector(\".container\");\nlet levelOfGame: string;\nlet gameStatus;\n\ngameStart();\n\nfunction gameStart() {\n    if (contentElement !== null) renderStartPage(contentElement);\n\n    let startButton: any = document.querySelector(\".select__startbutton\");\n\n    startButton.addEventListener(\"click\", () => {\n        if (startButton.disabled === true) {\n            alert(\"Выберите сложность!\");\n            return;\n        }\n\n        levelOfGame = window.localStorage.getItem(\"level\") || \"\";\n        gameStatus = window.localStorage.getItem(\"gameStatus\");\n\n        createRandomCardCollection(levelOfGame);\n\n        if (contentElement !== null && gameStatus !== null)\n            renderGamePage(contentElement, gameStatus);\n\n        setTimeout(() => gameTime(), 5001);\n    });\n}\n\nfunction gameTime() {\n    let reStartButton: any = document.querySelector(\".header__button\");\n\n    reStartButton.classList.remove(\"global__button--disabled\");\n\n    reStartButton.addEventListener(\"click\", () => {\n        gameStart();\n    });\n\n    let cardsElement: any = document.querySelectorAll(\".card__items\");\n\n    let controlArray: any = [];\n    for (let key of cardsElement) {\n        key.addEventListener(\"click\", () => {\n            let clickCard: string = key.dataset.suite + key.dataset.dignity;\n            if (key.classList.contains(\"card__items--close\"))\n                controlArray.push(clickCard);\n            key.classList.remove(\"card__items--close\");\n            key.classList.add(\"card__items--open\");\n\n            key.innerHTML = cardPictureOnClick(key);\n\n            setTimeout(() => {\n                let gameResult = \"\";\n                if (controlArray.length > 0 && controlArray.length % 2 === 0) {\n                    if (\n                        controlArray[controlArray.length - 1] !==\n                        controlArray[controlArray.length - 2]\n                    ) {\n                        window.localStorage.setItem(\"gameStatus\", \"gameEnd\");\n                        gameStatus = window.localStorage.getItem(\"gameStatus\");\n                        gameResult = \"loss\";\n                        if (contentElement !== null && gameStatus !== null) {\n                            renderEndPage(\n                                contentElement,\n                                gameStatus,\n                                gameResult\n                            );\n                        }\n\n                        setTimeout(() => {\n                            let endStartbutton: any =\n                                document.querySelector(\".end__startbutton\");\n                            endStartbutton.addEventListener(\"click\", () => {\n                                window.localStorage.removeItem(\"start\");\n                                window.localStorage.removeItem(\"gameStatus\");\n                                let endContainer: any =\n                                    document.querySelector(\".end__container\");\n                                let container: any =\n                                    document.querySelector(\".container\");\n                                endContainer.remove();\n                                container.style.opacity = \"1\";\n                                gameStart();\n                            });\n                        }, 1);\n                    }\n                }\n                if (controlArray.length === cardsElement.length) {\n                    window.localStorage.setItem(\"gameStatus\", \"gameEnd\");\n                    gameStatus = window.localStorage.getItem(\"gameStatus\");\n                    gameResult = \"win\";\n                    if (contentElement !== null && gameStatus !== null) {\n                        renderEndPage(contentElement, gameStatus, gameResult);\n                    }\n                    setTimeout(() => {\n                        let endStartbutton: any =\n                            document.querySelector(\".end__startbutton\");\n                        endStartbutton\n                            .querySelector(\".end__startbutton\")\n                            .addEventListener(\"click\", () => {\n                                window.localStorage.removeItem(\"start\");\n                                window.localStorage.removeItem(\"gameStatus\");\n                                let endContainer: any =\n                                    document.querySelector(\".end__container\");\n                                let container: any =\n                                    document.querySelector(\".end__container\");\n                                endContainer.remove();\n                                container.style.opacity = \"1\";\n                                gameStart();\n                            });\n                    }, 1);\n                }\n            }, 5);\n        });\n    }\n}\n\nfunction cardPictureOnClick(key: any): string {\n    return `<div class =\"card__firstSymbol\">\n                        ${\n                            key.dataset.dignity === \"1\"\n                                ? \"10\"\n                                : key.dataset.dignity\n                        }\n                    </div>\n                    <div class =\"card__secondSymbol\">\n                        <img src=${suitePict(key.dataset.suite)}>\n                    </div>\n                    <div class =\"card__thirdSymbol\">\n                        <img src=${suitePict(\n                            key.dataset.suite\n                        )} class = 'card__centerPicture'>\n                    </div>\n                    <div class =\"card__fourSymbol \">\n                        <img src=${suitePict(key.dataset.suite)}>\n                    </div>\n                    <div class =\"card__fiveSymbol\">\n                        ${\n                            key.dataset.dignity === \"1\"\n                                ? \"10\"\n                                : key.dataset.dignity\n                        }\n                    </div>`;\n}\n"],"names":["renderGamePage","contentElement","gameStatus","gamePageContent","level","cardShirt","gameCardCollection","window","localStorage","getItem","gameCards","JSON","parse","fullCardCollection","fullGameCards","headerElement","length","getRenderElement","cardPicture","innerHTML","setTimeout","startTimer","Date","getTime","setItem","String","renderEndPage","gameResult","finishTimer","timeToGame","secondNumber","firstNumber","secondSymbol","endPageContent","document","createElement","className","Number","Math","floor","newContent","querySelector","style","opacity","after","element","Arr","key","suitePict","suite","shuffle","array","sort","random","levelOfGame","gameStart","removeItem","buttonElements","querySelectorAll","startButton","disabled","addEventListener","classList","remove","add","textContent","renderStartPage","cardDignity","dignity","push","stringify","concat","createRandomCardCollection","reStartButton","cardsElement","controlArray","clickCard","dataset","contains","cardPictureOnClick","endContainer","container","gameTime","alert"],"sourceRoot":""}